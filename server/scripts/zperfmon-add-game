#!/bin/bash

#
# Copyright 2013 Zynga Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#      distributed under the License is distributed on an "AS IS" BASIS,
#      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 

# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

BINPATH="`dirname $0`"

ARRAY=true
TARGET=
CMDS_TO_RUN=`mktemp /tmp/cmds_to_run.XXXXXX`
DEFAULT_DAU=-1
DEFAULT_TAG='\"\"'
DEFAULT_RELEASE='\"\"'

_GAME=$1
GAME=$1
ARRAYID=$2
DEPLOYID=
if test -z "$GAME"; then
	read -p "Name of the game: " GAME
	_GAME=$GAME
fi

if test -z "$ARRAYID"; then
        echo "This is a new game, not an array"
	ARRAY="false"

	if test -z "$DEPLOYID"; then
        	read -p "Deployment ID of the game: " DEPLOYID
	fi
	
    if test -z "$DEPLOYID"; then
            echo "No Deployment ID given"
            echo "exiting..."
            exit
    fi


fi

if [ $ARRAY = true ]; then
	GAME=$GAME"_"$ARRAYID
fi

# Check game name validity (BUG number SEG1898)
if [[ ! ${GAME} =~ "^[a-zA-Z]+[a-zA-Z_0-9]*$" ]]
then
        echo "Given game name is not valid!!!"
	echo "exiting..."
	exit 
fi

ROOT_DIR=$(php -r "include_once 'server.cfg'; echo \$server_cfg['root_upload_directory'];"  | sed 's/\(.zperfmon\/\)\(.*\)/\1/')

if [ $ARRAY = false ]; then

cat > ${CMDS_TO_RUN} <<EOF

mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME};
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/xhprof.slow;
mkdir -p  /zperf_stage/${TARGET}/${ROOT_DIR}/${GAME}/xhprof.slow;
mount --bind /zperf_stage/${TARGET}/${ROOT_DIR}/${GAME}/xhprof.slow ${TARGET}/${ROOT_DIR}/${GAME}/xhprof.slow;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/timeslots;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/events;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/configs;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/reports/daily;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/reports/weekly;

chmod -R a+w ${TARGET}/${ROOT_DIR}/${GAME}/;

mkdir -p   ${TARGET}/var/www/html/zperfmon/blobs/${GAME};
chmod a+w  ${TARGET}/var/www/html/zperfmon/blobs/${GAME};

ln -s /usr/local/zperfmon/etc/configs/plugin_names.xml  ${TARGET}/${ROOT_DIR}/${GAME}/configs/;


sed -e '
s/__game_name__/${GAME}/
s/__db_name_for_game__/zprf_${GAME}/' ${TARGET}/etc/zperfmon/conf.d/game.cfg >  ${TARGET}/etc/zperfmon/conf.d/${GAME}.cfg;


EOF

fi

if [ $ARRAY = true ]; then

cat > ${CMDS_TO_RUN} <<EOF

mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME};
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/xhprof.slow;
mkdir -p  /zperf_stage/${TARGET}/${ROOT_DIR}/${GAME}/xhprof.slow;
mount --bind /zperf_stage/${TARGET}/${ROOT_DIR}/${GAME}/xhprof.slow ${TARGET}/${ROOT_DIR}/${GAME}/xhprof.slow;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/timeslots;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/events;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/configs;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/reports/daily;
mkdir -p  ${TARGET}/${ROOT_DIR}/${GAME}/reports/weekly;

chmod -R a+w ${TARGET}/${ROOT_DIR}/${GAME}/;

mkdir -p   ${TARGET}/var/www/html/zperfmon/blobs/${GAME};
chmod a+w  ${TARGET}/var/www/html/zperfmon/blobs/${GAME};

ln -s /usr/local/zperfmon/etc/configs/plugin_names.xml  ${TARGET}/${ROOT_DIR}/${GAME}/configs/;

EOF

fi

echo "[1;31m"
echo "I will run the following commands:"
echo [0m

cat ${CMDS_TO_RUN}

while true; do
    echo "[1;31m"
    read -p "Is that OK (yes/no)? " yn
    echo [0m

    case $yn in
        [Yy]* )
		/bin/bash ${CMDS_TO_RUN};
		break;;
        [Nn]* ) echo "aborting install."; exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

rm ${CMDS_TO_RUN}

echo "Running DB creation script for ${GAME}"

sudo -u nobody /bin/bash $BINPATH/zperfmon-create-gamedb ${_GAME} ${ARRAYID}

if test -z "$ARRAYID"; then
	php -r "include_once 'create_array_games.php'; include_once 'server.cfg'; \$cag = new CreateArrrayGames(\$server_cfg);\$cag->make_array_games('$GAME','$DEPLOYID');"
fi

#
# Instead of editing manually the config files take array IDs and Deploy Id as parameter
# and edit the files automatically by asking user for it.
#
echo "Remember to edit /etc/zperfmon/conf.d/${GAME}.cfg and populate all required options"
echo "and then edit /etc/zperfmon/server.cfg to add '${GAME}' to game_list array"
echo "Please run php /usr/local/zperfmon/bin/vertica_table_add_column.php -g ${GAME}. This will add necessary columns to vertica table"
echo "Adding ${GAME} to game_list will activate zperfmon"

